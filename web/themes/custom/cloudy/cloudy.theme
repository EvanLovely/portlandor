<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

function cloudy_theme() {
  return [
    'portland_search_form' => [
      'variables' => [
        'size' => NULL,
        'input' => NULL,
        'buttons' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function cloudy_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
}

use Drupal\group\Entity\GroupContent;
use Drupal\group\Entity\GroupInterface;

function setGroupVariables($group, &$variables) {
  $shortname_or_acronym = $group->field_shortname_or_acronym->value;
  $variables['attributes']['class'][] = 'group-page';
  $variables['attributes']['class'][] = strtolower($shortname_or_acronym);
}

function cloudy_preprocess_html(&$variables) {
  $route_match = \Drupal::service('current_route_match');
  // if this is a node
  if ($node = $route_match->getParameter('node')) {
    if (!$node instanceof \Drupal\Core\Entity\ContentEntityInterface) {
      $node = \Drupal\node\Entity\Node::load($node);
    }
    // that is group content
    foreach (GroupContent::loadByEntity($node) as $group_content) {
      // give it the shortname as a class
      setGroupVariables($group_content->getGroup(), $variables);
    }
  }
  // otherwise if we are in some sort of group page
  elseif ($group = $route_match->getParameter('group')) {
    // we are on a group homepage
    if($group instanceof GroupInterface) {
      setGroupVariables($group, $variables);
    }
    // we are on something else and probably have the ID
    else {
      $group_entity = \Drupal::entityTypeManager()->getStorage('group')->load($group);
      setGroupVariables($group_entity, $variables);
    }
  }

  // Check if $title_override is set and if so, override the page's HTML <title>
  $title_override = _persistent_var('title_override');
  if ($title_override) {
    $variables['head_title'] = $title_override . ' | ' . \Drupal::config('system.site')->get('name'); // [title override] | [site name]
  }
}

function cloudy_preprocess_views_view(&$vars) {
  $view = $vars['view'];
  
  /**
   * Override HTML title of group-based views to prevent duplicate titles.
   *
   * Only target views that join the group_content tables. Or target specific views by name by using:
   *    if ($view->storage->label() == 'Group services') {
   */
  if (isset($view->query->tables['node_field_data']['group_content_field_data_node_field_data'])
      || isset($view->query->tables['media_field_data']['group_content_field_data_media_field_data'])) {
    $gid = $view->args[0];
    $group = Drupal\group\Entity\Group::load($gid);
    if (isset($group)) {
      $group_title = $group->label();
      $title_override = $view->build_info['title'] . ' | ' . $group_title;  // [view name] | [group name]
      _persistent_var( 'title_override', $title_override );
    }
  }  
}

// Persistent variable getter and setter helper function
function _persistent_var($var_name, $new_val = NULL) {
  $vars = &drupal_static(__FUNCTION__, array());

  if ($new_val != NULL) {
    $vars[$var_name] = $new_val;
  }

  return isset($vars[$var_name]) ? $vars[$var_name] : NULL;
}


///**
// * Pull in a class based on the field value.
// */
//
//use Drupal\taxonomy\Entity;
//
//function setTermVariables($term, &$variables) {
//  $fontawesome_icon = 'fas-'. $term->field_fontawesome_icon->value;
//  $variables['attributes']['class'][] = 'fas';
//  $variables['attributes']['class'][] = $fontawesome_icon;
//}
//
///**
// * Implements hook_preprocess_HOOK() for page title templates.
// */
//function cloudy_preprocess_page_title(&$variables) {
//  // Since the title and the shortcut link are both block level elements,
//  // positioning them next to each other is much simpler with a wrapper div.
//  $route_match = \Drupal::service('current_route_match');
//  // if this is a node
//  if ($term = $route_match->getParameter('term')) {
//    // that is group content
//    foreach (Term::loadByEntity($term) as $group_content) {
//      // give it the shortname as a class
//    setGroupVariables($group_content->getGroup(), $variables);
//  }
//}
